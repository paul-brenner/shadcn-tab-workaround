import { SvelteComponentTyped } from "svelte";
import type { ComponentProps, SvelteComponent } from 'svelte';
import type { ComponentRenderConfig } from './createRender';
declare class __sveltets_Render<TComponent extends SvelteComponent> {
    props(): {
        instance?: TComponent | undefined;
        config: Omit<ComponentRenderConfig<TComponent>, "props">;
        props?: ComponentProps<TComponent> | undefined;
    };
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {};
}
export declare type PropsRendererProps<TComponent extends SvelteComponent> = ReturnType<__sveltets_Render<TComponent>['props']>;
export declare type PropsRendererEvents<TComponent extends SvelteComponent> = ReturnType<__sveltets_Render<TComponent>['events']>;
export declare type PropsRendererSlots<TComponent extends SvelteComponent> = ReturnType<__sveltets_Render<TComponent>['slots']>;
export default class PropsRenderer<TComponent extends SvelteComponent> extends SvelteComponentTyped<PropsRendererProps<TComponent>, PropsRendererEvents<TComponent>, PropsRendererSlots<TComponent>> {
}
export {};
