import { SvelteComponentTyped } from "svelte";
import type { Writable } from 'svelte/store';
export type TooltipProviderProps = {
    delayDuration?: number;
    skipDelayDuration?: number;
    disableHoverableContent?: boolean;
};
type TooltipProviderContext = {
    readonly isOpenDelayed: boolean;
    readonly delayDuration: number;
    readonly onOpen: () => void;
    readonly onClose: () => void;
    readonly disableHoverableContent: boolean;
    isPointerInTransit: boolean;
};
export declare const getTooltipProviderContext: () => Writable<TooltipProviderContext> | undefined;
declare const __propDef: {
    props: {
        delayDuration?: number | undefined;
        skipDelayDuration?: number | undefined;
        disableHoverableContent?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type ProviderProps = typeof __propDef.props;
export type ProviderEvents = typeof __propDef.events;
export type ProviderSlots = typeof __propDef.slots;
export default class Provider extends SvelteComponentTyped<ProviderProps, ProviderEvents, ProviderSlots> {
}
export {};
